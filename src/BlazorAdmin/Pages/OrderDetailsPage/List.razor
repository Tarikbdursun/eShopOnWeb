@page "/admin/orderdetails"

@attribute [Authorize(Roles = BlazorShared.Authorization.Constants.Roles.ADMINISTRATORS)]

@inherits BlazorAdmin.Helpers.BlazorComponent

@namespace BlazorAdmin.Pages.OrderDetailsPage
@using BlazorShared.Models.OrderDetailsModels

<PageTitle>eShopOnWeb Admin: Order Details</PageTitle>

<h1>Order Details</h1>
<button class="btn btn-primary" @onclick="ShowAllOrderDetails">Show All Orders</button>

@if (orderDetails != null && orderDetails.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Buyer Name</th>
                <th>Address</th>
                <th>Date</th>
                <th>Status</th>
                <th>Products</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var orderDetail in orderDetails)
            {
                <tr>
                    @* <td>@orderDetail.BuyerName</td> *@
                    <td>@orderDetail.Address</td>
                    <td>@orderDetail.OrderDate</td>
                    <td>@orderDetail.Status</td>
                    <td>
                        <ul>
                            @foreach (var product in orderDetail.Items)
                            {
                                <li>@product.ItemOrdered.ProductName - @product.UnitPrice</li>
                            }
                        </ul>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No order details found.</p>
}

@code {
    private List<OrderDetails> orderDetails;

    private void ShowAllOrderDetails()
    {
        // Burada orderDetails listesini doldurmanız gerekecek.
        // Örneğin, bir servisten veri çekerek orderDetails listesini doldurabilirsiniz.
        orderDetails = new List<OrderDetails>
        {
            new OrderDetails
            {
                Id=1,
                BuyerId="2345677655",
                OrderId=1,
                // BuyerName="Ali",
                OrderDate=DateTime.Today,
                Address="Ankara",
                Status="Pending"
            },
            new OrderDetails
            {
                Id=2,
                BuyerId="2345677656",
                OrderId=2,
                // BuyerName="Veli",
                OrderDate=DateTime.Today,
                Address="Bolu",
                Status="Pending"
            }
        };
    }

    // OrderDetail sınıfının tanımı buraya eklenecek.
    // Eğer orderDetails listesini doldurmak için bir servis kullanıyorsanız, bu sınıfı servis tarafında tanımlamanız gerekecek.
}
